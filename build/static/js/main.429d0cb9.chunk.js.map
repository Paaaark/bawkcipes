{"version":3,"sources":["myTheme.js","components/TopAppBar.js","components/FloatingActionButton.js","firebase.js","components/DraftCard.js","Backend.js","components/AddFragment.js","components/EditingDraft.js","components/RecipeCard.js","components/MainFragment.js","components/NoRecipeFound.js","components/RecipeFragment.js","App.js","index.js"],"names":["myTheme","createTheme","palette","primary","light","main","dark","secondary","gray","black","typography","fontFamily","responsiveFontSizes","TopAppBar","_ref","searchRecipe","location","useLocation","color","pathname","react","Box","sx","flexGrow","AppBar","position","style","background","Toolbar","react_router_dom","to","IconButton","size","edge","aria-label","mr","ArrowBack_default","a","Pets_default","Typography","variant","component","location_to_title","display","alignItems","InputBase","placeholder","input","padding","onChange","event","target","value","Search_default","marginRight","FloatingActionButton","react_default","createElement","Fab","margin","top","right","bottom","left","Add_default","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","storage","getStorage","DraftCard","draft","onDelete","_React$useState","React","_React$useState2","Object","slicedToArray","openDialog","setOpenDialog","_useState","useState","_useState2","imagePath","setImagePath","useEffect","downloadedImage","imageUploaded","getDownloadURL","ref","then","url","Card","width","flexDirection","justifyContent","CardMedia","height","image","alt","title","CardContent","gutterBottom","description","CardActions","Grid","container","spacing","direction","item","xs","align","id","Edit_default","onClick","Delete_default","Dialog","open","onClose","aria-labelledby","DialogTitle","DialogActions","Button","ALPHABETS","generateId","time","Date","now","i","length","Math","floor","random","relatedWords","keyword","recipes","n","mapped","map","recipe","levDist","sort","b","v","first","second","matrix","Array","from","fill","r","c","min","charAt","AddFragment","drafts","onEdit","onCreate","window","innerWidth","setWidth","navigate","useNavigate","handleResize","addEventListener","justify","paddingTop","paddingLeft","components_DraftCard","EditingDraft","onSaveDraft","uploadDraft","useParams","mainDiv","useRef","setDraft","_useState3","_useState4","setTitle","_useState5","_useState6","desc","setDesc","_useState7","_useState8","steps","setSteps","_useState9","_useState10","ingredients","setIngredients","_useState11","_useState12","amounts","setAmounts","_useState13","_useState14","ingredientsToggle","setIngredientsToggle","_useState15","_useState16","amountsToggle","setAmountsToggle","_useState17","_useState18","setImage","_useState19","_useState20","_useState21","_useState22","setImageUploaded","_useState23","_useState24","titleOnEdit","setTitleOnEdit","_useState25","_useState26","descOnEdit","setDescOnEdit","_useState27","_useState28","dimensions","setDimensions","_queryDraft","asyncToGenerator","_regeneratorRuntime","mark","_callee","q","wrap","_context","prev","next","query","collection","where","getDocs","sent","forEach","doc","data","stop","apply","this","arguments","_i","_Object$values","values","queryDraft","current","offsetWidth","console","log","toggleTitle","e","toggleDesc","getDraft","getTextField","label","onBlur","multiLine","TextField","fullWidth","defaultValue","multiline","maxWidth","bgcolor","className","Stack","zeroMinWidth","textTransform","cursor","overflowWrap","src","objectFit","type","hidden","files","URL","createObjectURL","ingredient","index","key","entry","concat","toConsumableArray","Divider","marginTop","marginBottom","step","RecipeCard","cardColor","setCardColor","onMouseOver","onMouseOut","backgroundColor","MainFragment","filteredRecipes","setFilteredRecipes","filter","toLowerCase","includes","paddingRight","components_RecipeCard","defaultProps","NoRecipeFound","relatedRecipes","setRelatedRecipes","_getRecipesFromDatabase","NoRecipeFound_regeneratorRuntime","snapshot","docs","getRecipesFromDatabase","RecipeFragment","openRecipe","setOpenRecipe","setRecipe","_queryRecipe","RecipeFragment_regeneratorRuntime","queryRecipe","processRecipe","components_NoRecipeFound","Stack_Stack","App","_getDraftsFromDatabase","App_regeneratorRuntime","setDrafts","_uploadDraftToDatabase","_callee2","_context2","setDoc","_callee3","_context3","setRecipes","deleteDraftFromDatabase","_x2","_deleteDraftFromDatabase","_callee4","_context4","deleteDoc","_uploadRecipeToDatabase","_callee5","updates","_context5","keys","getDraftsFromDatabase","currentEditingDraft","setKeyword","saveDraft","newDraft","imageId","generateImageId","storageRef","imageFile","uploadBytes","fullPath","oldDraft","find","_x","uploadDraftToDatabase","_x3","uploadRecipeToDatabase","ThemeProvider","theme","components_TopAppBar","newKeyword","react_router","path","element","components_EditingDraft","components_AddFragment","components_MainFragment","components_RecipeFragment","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.429d0cb9.chunk.js","sourcesContent":["import { createTheme, responsiveFontSizes } from \"@mui/material/styles\";\r\n\r\nlet myTheme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#115c88\",\r\n      main: \"#0c4160\",\r\n      dark: \"#082e44\",\r\n    },\r\n    secondary: {\r\n      light: \"#d6d3c2\",\r\n      main: \"#aea885\",\r\n      dark: \"#8a835c\",\r\n    },\r\n    gray: {\r\n      main: \"#999999\",\r\n    },\r\n    black: \"#000000\",\r\n  },\r\n  typography: {\r\n    fontFamily: [\"Roboto\"],\r\n  },\r\n});\r\n\r\nmyTheme = responsiveFontSizes(myTheme);\r\n\r\nexport default myTheme;\r\n","import * as React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport PetsIcon from \"@mui/icons-material/Pets\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport myTheme from \"../myTheme\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst TopAppBar = ({ searchRecipe }) => {\r\n  const location = useLocation();\r\n  const color =\r\n    location.pathname === \"/\"\r\n      ? myTheme.palette.primary.main\r\n      : myTheme.palette.black;\r\n\r\n  const location_to_title = (location) => {\r\n    switch (location.pathname) {\r\n      case \"/addDraft\":\r\n        return \"Drafts\";\r\n      case \"/editingDraft\":\r\n        return \"Editing Draft\";\r\n      case \"/\":\r\n      default:\r\n        return \"Bawkcipes\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1 }}>\r\n      <AppBar position=\"sticky\" style={{ background: color }}>\r\n        <Toolbar>\r\n          {location.pathname !== \"/\" ? (\r\n            <Link\r\n              to={location.pathname === \"/editingDraft\" ? \"/addDraft\" : \"/\"}\r\n              color=\"inherit\"\r\n            >\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </Link>\r\n          ) : (\r\n            <PetsIcon\r\n              size=\"large\"\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              sx={{ mr: 2 }}\r\n            />\r\n          )}\r\n\r\n          <Typography\r\n            variant=\"h6\"\r\n            component=\"div\"\r\n            sx={{ mr: \"1%\", flexGrow: 1 }}\r\n          >\r\n            {location_to_title(location)}\r\n          </Typography>\r\n\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <InputBase\r\n              placeholder=\"Search...\"\r\n              sx={{\r\n                input: { color: \"white\" },\r\n                placeholder: { padding: 0 },\r\n              }}\r\n              onChange={(event) => searchRecipe(event.target.value)}\r\n            />\r\n            <div>\r\n              <SearchIcon style={{ marginRight: \"1%\" }} />\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TopAppBar;\r\n","import React from 'react'\r\nimport Fab from '@mui/material/Fab'\r\nimport AddIcon from '@mui/icons-material/Add'\r\n\r\nexport default function FloatingActionButton() {\r\n    const style = {\r\n        margin: 0,\r\n        top: 'auto',\r\n        right: 20,\r\n        bottom: 20,\r\n        left: 'auto',\r\n        position: 'fixed',\r\n    };\r\n    return (\r\n        <Fab size=\"large\" color=\"secondary\" aria-label=\"add\" style={style}>\r\n            <AddIcon/>\r\n        </Fab>\r\n    )\r\n}","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCnsOtHofuJn6CXzyaQuCN9AetpMZMy7Tk\",\r\n  authDomain: \"bawkcipes.firebaseapp.com\",\r\n  projectId: \"bawkcipes\",\r\n  storageBucket: \"bawkcipes.appspot.com\",\r\n  messagingSenderId: \"1059133058903\",\r\n  appId: \"1:1059133058903:web:c253e3f2b94f9410c75812\",\r\n  measurementId: \"G-92JGV3QC26\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nexport const storage = getStorage(app);\r\n\r\nexport default db;\r\n","import * as React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { storage } from \"../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction DraftCard({ draft, onDelete }) {\r\n  const [openDialog, setOpenDialog] = React.useState(false);\r\n  const [imagePath, setImagePath] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (draft.downloadedImage) {\r\n      setImagePath(draft.downloadedImage);\r\n    } else if (draft.imageUploaded) {\r\n      getDownloadURL(ref(storage, draft.imagePath)).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    } else {\r\n      getDownloadURL(ref(storage, \"defaultFoodImage\")).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n      }}\r\n    >\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"200\"\r\n        image={imagePath ? imagePath : null}\r\n        alt={draft.title}\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          {draft.title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {draft.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Grid container spacing={1} direction=\"row\">\r\n          <Grid item xs align=\"center\">\r\n            <Link to={\"/draft/\" + draft.id}>\r\n              <IconButton size=\"medium\">\r\n                <EditIcon />\r\n              </IconButton>\r\n            </Link>\r\n          </Grid>\r\n          <Grid item xs align=\"center\">\r\n            <IconButton size=\"medium\" onClick={(event) => setOpenDialog(true)}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </CardActions>\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={(event) => setOpenDialog(false)}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Delete the draft?\"}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={(event) => setOpenDialog(false)}>No</Button>\r\n          <Button\r\n            onClick={(event) => {\r\n              onDelete(draft);\r\n              setOpenDialog(false);\r\n            }}\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default DraftCard;\r\n","const ALPHABETS = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\nexport function generateId() {\r\n  let time = Date.now();\r\n  let id = \"\";\r\n  for (let i = 0; i < 8; i++) {\r\n    id = ALPHABETS[time % ALPHABETS.length] + id;\r\n    time = Math.floor(time / ALPHABETS.length);\r\n  }\r\n  for (let i = 0; i < 8; i++) {\r\n    id = id + ALPHABETS[Math.floor(Math.random() * ALPHABETS.length)];\r\n  }\r\n  return id;\r\n}\r\n\r\nexport function generateImageId() {\r\n  let id = generateId();\r\n  id = id + \"img\";\r\n  return id;\r\n}\r\n\r\nexport function relatedWords({ keyword, recipes, n }) {\r\n  if (n === null) n = 5;\r\n  const mapped = recipes.map((recipe, i) => {\r\n    return { i, value: levDist(keyword, recipe.title) };\r\n  });\r\n  mapped.sort((a, b) => {\r\n    if (a.value > b.value) {\r\n      return 1;\r\n    }\r\n    if (a.value < b.value) {\r\n      return -1;\r\n    }\r\n    return 0;\r\n  });\r\n  const result = mapped.map((v) => recipes[v.i]);\r\n  return result;\r\n}\r\n\r\nfunction levDist(first, second) {\r\n  const matrix = Array.from(Array(first.length + 1), () =>\r\n    new Array(second.length + 1).fill(0)\r\n  );\r\n  for (let i = 1; i <= first.length; i++) matrix[i][0] = i;\r\n  for (let i = 1; i <= second.length; i++) matrix[0][i] = i;\r\n  for (let r = 1; r <= first.length; r++) {\r\n    for (let c = 1; c <= second.length; c++) {\r\n      matrix[r][c] = Math.min(matrix[r - 1][c] + 1, matrix[r][c - 1] + 1);\r\n      if (first.charAt(r - 1) !== second.charAt(c - 1)) {\r\n        matrix[r][c] = Math.min(matrix[r - 1][c - 1] + 1, matrix[r][c]);\r\n      } else {\r\n        matrix[r][c] = Math.min(matrix[r - 1][c - 1], matrix[r][c]);\r\n      }\r\n    }\r\n  }\r\n  return matrix[first.length][second.length];\r\n}\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport DraftCard from \"./DraftCard\";\r\nimport { Grid, IconButton, Typography } from \"@mui/material\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { generateId } from \"../Backend\";\r\n\r\nconst AddFragment = ({ drafts, onEdit, onCreate, onDelete }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const navigate = useNavigate();\r\n\r\n  const handleResize = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      justify=\"flex-start\"\r\n      paddingTop=\"10px\"\r\n      paddingLeft=\"10px\"\r\n    >\r\n      {drafts.map((draft) => (\r\n        <Grid item xs={12 / Math.floor(width / 365)}>\r\n          <DraftCard draft={draft} onEdit={onEdit} onDelete={onDelete} />\r\n        </Grid>\r\n      ))}\r\n      <Grid\r\n        container\r\n        xs={12 / Math.floor(width / 365)}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid\r\n          container\r\n          sx={{ height: \"345px\" }}\r\n          direction=\"column\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              const id = generateId();\r\n              onCreate(id);\r\n              navigate(\"/draft/\" + id);\r\n            }}\r\n          >\r\n            <AddIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h5\">Create a new draft!</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default AddFragment;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Stack } from \"@mui/system\";\r\nimport { Button } from \"@mui/material\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport styles from \"../styles.css\";\r\nimport db, { storage } from \"../firebase\";\r\nimport { getDownloadURL, ref } from \"firebase/storage\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\nconst EditingDraft = ({ drafts, onSaveDraft, uploadDraft }) => {\r\n  let { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const mainDiv = useRef(null);\r\n  const [draft, setDraft] = useState(null);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [steps, setSteps] = useState([]);\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [amounts, setAmounts] = useState([]);\r\n  const [ingredientsToggle, setIngredientsToggle] = useState([]);\r\n  const [amountsToggle, setAmountsToggle] = useState([]);\r\n  const [image, setImage] = useState(null);\r\n  const [imagePath, setImagePath] = useState(null);\r\n  const [imageUploaded, setImageUploaded] = useState(false);\r\n  const [titleOnEdit, setTitleOnEdit] = useState(false);\r\n  const [descOnEdit, setDescOnEdit] = useState(false);\r\n  const [dimensions, setDimensions] = useState({\r\n    width: 0,\r\n    height: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    for (const value of Object.values(drafts)) {\r\n      if (value.id === id) setDraft(value);\r\n    }\r\n    if (draft === null) {\r\n      queryDraft();\r\n    }\r\n    setDimensions({\r\n      width: mainDiv.current.offsetWidth,\r\n      height: Math.floor(mainDiv.current.offsetWidth / 16),\r\n    });\r\n    window.addEventListener(\"resize\", handleResize, false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (draft === null) return;\r\n    if (draft.imageUploaded) {\r\n      getDownloadURL(ref(storage, draft.imagePath)).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    }\r\n    if (draft.steps === null) draft.steps = [];\r\n    if (draft.title) setTitle(draft.title);\r\n    if (draft.description) setDesc(draft.description);\r\n    if (draft.steps) setSteps(draft.steps);\r\n    if (draft.ingredients) setIngredients(draft.ingredients);\r\n    if (draft.amounts) setAmounts(draft.amounts);\r\n    if (draft.imagePath) setImagePath(draft.imagePath);\r\n    if (draft.imageUploaded) setImageUploaded(draft.imageUploaded);\r\n  }, [draft]);\r\n\r\n  async function queryDraft() {\r\n    const q = query(collection(db, \"drafts\"), where(\"id\", \"==\", id));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      setDraft(doc.data());\r\n    });\r\n  }\r\n\r\n  const handleResize = () => {\r\n    setDimensions({\r\n      width: mainDiv.current.offsetWidth,\r\n      height: Math.floor(mainDiv.current.offsetWidth / 16),\r\n    });\r\n    console.log(\"Window resized\");\r\n    console.log(dimensions);\r\n  };\r\n\r\n  const onAddIngredient = () => {\r\n    setIngredients([...ingredients, \"\"]);\r\n    setIngredientsToggle([...ingredientsToggle, true]);\r\n    setAmounts([...amounts, \"\"]);\r\n    setAmountsToggle([...amountsToggle, true]);\r\n  };\r\n\r\n  const toggleTitle = (e) => {\r\n    setTitleOnEdit(!titleOnEdit);\r\n  };\r\n\r\n  const toggleDesc = (e) => {\r\n    setDescOnEdit(!descOnEdit);\r\n  };\r\n\r\n  const showIngredients = (e) => {\r\n    return ingredients.map((ingredient, index) => {\r\n      return (\r\n        <Grid\r\n          key={\"Ingredients\" + index}\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"flex-start\"\r\n        >\r\n          <Grid item xs>\r\n            {ingredientsToggle[index] ? (\r\n              <TextField\r\n                label=\"Ingredient\"\r\n                defaultValue={ingredient}\r\n                variant=\"standard\"\r\n                onBlur={(event) => {\r\n                  setIngredientsToggle(\r\n                    ingredientsToggle.map((entry, i) =>\r\n                      i === index ? !entry : entry\r\n                    )\r\n                  );\r\n                  setIngredients(\r\n                    ingredients.map((entry, i) =>\r\n                      i === index\r\n                        ? event.target.value === \"\"\r\n                          ? \"Ingredient\"\r\n                          : entry\r\n                        : entry\r\n                    )\r\n                  );\r\n                }}\r\n                onChange={(event) => {\r\n                  setIngredients(\r\n                    ingredients.map((entry, i) =>\r\n                      i === index ? event.target.value : entry\r\n                    )\r\n                  );\r\n                }}\r\n              />\r\n            ) : (\r\n              <Typography\r\n                variant=\"body2\"\r\n                onClick={() =>\r\n                  setIngredientsToggle(\r\n                    ingredientsToggle.map((entry, i) =>\r\n                      i === index ? !entry : entry\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                {ingredient}\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs>\r\n            {amountsToggle[index] ? (\r\n              <TextField\r\n                label=\"Amount\"\r\n                defaultValue={amounts[index]}\r\n                variant=\"standard\"\r\n                onBlur={(event) => {\r\n                  setAmountsToggle(\r\n                    amountsToggle.map((entry, i) =>\r\n                      i === index ? !entry : entry\r\n                    )\r\n                  );\r\n                  setAmounts(\r\n                    amounts.map((entry, i) =>\r\n                      i === index\r\n                        ? event.target.value === \"\"\r\n                          ? \"Amount\"\r\n                          : entry\r\n                        : entry\r\n                    )\r\n                  );\r\n                }}\r\n                onChange={(event) => {\r\n                  setAmounts(\r\n                    amounts.map((entry, i) =>\r\n                      i === index ? event.target.value : entry\r\n                    )\r\n                  );\r\n                }}\r\n              />\r\n            ) : (\r\n              <Typography\r\n                variant=\"body2\"\r\n                onClick={() =>\r\n                  setAmountsToggle(\r\n                    amountsToggle.map((entry, i) =>\r\n                      i === index ? !entry : entry\r\n                    )\r\n                  )\r\n                }\r\n              >\r\n                {amounts[index]}\r\n              </Typography>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    });\r\n  };\r\n\r\n  const getDraft = (e) => {\r\n    draft.title = title;\r\n    draft.description = desc;\r\n    draft.steps = steps;\r\n    draft.image = image;\r\n    draft.imageUploaded = imageUploaded;\r\n    draft.ingredients = ingredients;\r\n    draft.amounts = amounts;\r\n    return draft;\r\n  };\r\n\r\n  const getTextField = (label, value, onBlur, onChange, multiLine) => {\r\n    return (\r\n      <TextField\r\n        fullWidth\r\n        label={label}\r\n        variant=\"standard\"\r\n        defaultValue={value}\r\n        onBlur={onBlur}\r\n        multiline={multiLine}\r\n        onChange={(event) => onChange(event.target.value)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getTitleText = () => {\r\n    return (\r\n      <div\r\n        onClick={toggleTitle}\r\n        style={{\r\n          textTransform: \"uppercase\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <Typography\r\n          variant=\"h3\"\r\n          align=\"center\"\r\n          style={{ overflowWrap: \"break-word\" }}\r\n        >\r\n          {title.length === 0 ? \"Title\" : title}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getDescText = () => {\r\n    return (\r\n      <div onClick={toggleDesc} style={{ cursor: \"pointer\" }}>\r\n        <Typography\r\n          variant=\"body1\"\r\n          align=\"center\"\r\n          color=\"#999999\"\r\n          style={{ overflowWrap: \"break-word\" }}\r\n        >\r\n          {desc.length === 0 ? \"Description\" : desc}\r\n        </Typography>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" alignItems=\"center\" paddingTop=\"10px\">\r\n      <Grid\r\n        container\r\n        width=\"100vw\"\r\n        maxWidth=\"1000px\"\r\n        bgcolor=\"white\"\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <div ref={mainDiv} className=\"textBox\">\r\n          <Stack spacing={0.5} direction=\"column\">\r\n            <Grid container width=\"100vw\" direction=\"row\">\r\n              {/* Start: Recipe metadata */}\r\n              <Grid\r\n                container\r\n                width={dimensions.width / 2}\r\n                height={dimensions.width / 2}\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <Grid item width={dimensions.width / 2} zeroMinWidth>\r\n                  {titleOnEdit\r\n                    ? getTextField(\"Title\", title, toggleTitle, setTitle, false)\r\n                    : getTitleText()}\r\n                </Grid>\r\n                <Grid item width={dimensions.width / 2} zeroMinWidth>\r\n                  {descOnEdit\r\n                    ? getTextField(\r\n                        \"Description\",\r\n                        desc,\r\n                        toggleDesc,\r\n                        setDesc,\r\n                        true\r\n                      )\r\n                    : getDescText()}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                container\r\n                width={dimensions.width / 2}\r\n                direction=\"column\"\r\n                justifyContent=\"center\"\r\n              >\r\n                {imagePath !== null ? (\r\n                  <img\r\n                    width={dimensions.width / 2}\r\n                    height={dimensions.width / 2}\r\n                    src={imagePath}\r\n                    style={{ objectFit: \"cover\" }}\r\n                  />\r\n                ) : (\r\n                  <Button variant=\"outlined\" component=\"label\">\r\n                    ADD PHOTO\r\n                    <input\r\n                      type=\"file\"\r\n                      hidden\r\n                      onChange={(event) => {\r\n                        if (event.target.files) {\r\n                          setImage(event.target.files[0]);\r\n                          setImagePath(\r\n                            URL.createObjectURL(event.target.files[0])\r\n                          );\r\n                          setImageUploaded(false);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            {/* End: Recipe metadata */}\r\n            {/* Start: Ingredient section */}\r\n            <Typography variant=\"h5\">Ingredients</Typography>\r\n            {showIngredients()}\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              onClick={onAddIngredient}\r\n            >\r\n              Add an ingredient\r\n            </Button>\r\n            {/* End: Ingredient section */}\r\n            <Divider style={{ marginTop: \"10px\", marginBottom: \"10px\" }} />\r\n            {/* Start: Recipe section */}\r\n            <Typography variant=\"h5\">Recipe</Typography>\r\n            {steps.map((step, index) => (\r\n              <TextField\r\n                fullWidth\r\n                label={\"Step \" + (index + 1)}\r\n                variant=\"standard\"\r\n                defaultValue={step}\r\n                onChange={(event) =>\r\n                  setSteps(\r\n                    steps.map((step, i) =>\r\n                      i === index ? event.target.value : step\r\n                    )\r\n                  )\r\n                }\r\n              />\r\n            ))}\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"outlined\"\r\n              onClick={() => setSteps([...steps, \"\"])}\r\n            >\r\n              Add a step\r\n            </Button>\r\n            {/* End: Recipe section */}\r\n            <Divider style={{ marginTop: \"10px\", marginBottom: \"10px\" }} />\r\n            {/* Start: Save buttons */}\r\n            <Grid container spacing={1.5} direction=\"row\">\r\n              <Grid item xs>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => {\r\n                    onSaveDraft(getDraft());\r\n                    navigate(\"/addDraft\");\r\n                  }}\r\n                >\r\n                  Save Draft\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Button\r\n                  fullWidth\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  onClick={() => uploadDraft(getDraft())}\r\n                >\r\n                  Upload Recipe\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            {/* End: Save buttons */}\r\n          </Stack>\r\n        </div>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default EditingDraft;\r\n","import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport { storage } from \"../firebase\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction RecipeCard({ recipe }) {\r\n  const [cardColor, setCardColor] = useState(\"#ffffff\");\r\n  const [imagePath, setImagePath] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (recipe.downloadedImage) {\r\n      setImagePath(recipe.downloadedImage);\r\n    } else if (recipe.imageUploaded) {\r\n      getDownloadURL(ref(storage, recipe.imagePath)).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    } else {\r\n      getDownloadURL(ref(storage, \"defaultFoodImage.png\")).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const onMouseOver = () => {\r\n    setCardColor(\"#C9C9C9\");\r\n  };\r\n  const onMouseOut = () => {\r\n    setCardColor(\"#ffffff\");\r\n  };\r\n\r\n  return (\r\n    <Link to={\"/recipe/\" + recipe.title}>\r\n      <Card\r\n        sx={{ width: \"100%\" }}\r\n        onMouseOver={onMouseOver}\r\n        onMouseOut={onMouseOut}\r\n      >\r\n        <CardMedia\r\n          component=\"img\"\r\n          height=\"300\"\r\n          image={imagePath}\r\n          alt={recipe.title}\r\n        />\r\n        <CardContent style={{ backgroundColor: cardColor }}>\r\n          <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n            {recipe.title}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            {recipe.description}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardActions style={{ backgroundColor: cardColor }}></CardActions>\r\n      </Card>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport RecipeCard from \"./RecipeCard\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nconst MainFragment = ({ recipes, keyword }) => {\r\n  const [width, setWidth] = useState(window.innerWidth);\r\n  const [filteredRecipes, setFilteredRecipes] = useState(recipes);\r\n\r\n  const handleResize = () => {\r\n    setWidth(window.innerWidth);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleResize();\r\n    window.addEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setFilteredRecipes(recipes);\r\n  }, [recipes]);\r\n\r\n  useEffect(() => {\r\n    setFilteredRecipes(\r\n      recipes.filter((recipe) =>\r\n        recipe.title.toLowerCase().includes(keyword.toLowerCase())\r\n      )\r\n    );\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={2}\r\n      direction=\"row\"\r\n      justify=\"center\"\r\n      paddingTop=\"10px\"\r\n      paddingLeft=\"10px\"\r\n      paddingRight=\"10px\"\r\n    >\r\n      {filteredRecipes.map((recipe, index) => (\r\n        <Grid item xs={12 / Math.floor(width / 365)}>\r\n          <RecipeCard key={index} recipe={recipe} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nMainFragment.defaultProps = {\r\n  recipes: [],\r\n};\r\n\r\nexport default MainFragment;\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport PriorityHighIcon from \"@mui/icons-material/PriorityHigh\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { relatedWords } from \"../Backend\";\r\nimport { getDocs, collection } from \"firebase/firestore\";\r\nimport db from \"../firebase\";\r\n\r\nconst NoRecipeFound = ({ recipes, keyword }) => {\r\n  const [relatedRecipes, setRelatedRecipes] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setRelatedRecipes(relatedWords({ keyword, recipes }));\r\n    if (recipes.length < 2) {\r\n      getRecipesFromDatabase();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setRelatedRecipes(relatedWords({ keyword, recipes }));\r\n  }, [recipes]);\r\n\r\n  async function getRecipesFromDatabase() {\r\n    const snapshot = await getDocs(collection(db, \"recipes\"));\r\n    recipes = snapshot.docs.map((doc) => doc.data());\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        margin: 10,\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n        }}\r\n      >\r\n        <Typography align=\"center\" variant=\"h5\">\r\n          Sorry, we couldn't find the recipe \"{keyword}\"\r\n        </Typography>\r\n      </div>\r\n      <Typography align=\"center\">Did you mean...</Typography>\r\n      {relatedRecipes !== null\r\n        ? relatedRecipes.map((recipe) => {\r\n            return <Typography align=\"center\">{recipe.title}</Typography>;\r\n          })\r\n        : \"\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoRecipeFound;\r\n","import React from \"react\";\r\nimport NoRecipeFound from \"./NoRecipeFound\";\r\nimport { Button, Grid } from \"@mui/material\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ref, getDownloadURL } from \"firebase/storage\";\r\nimport db, { storage } from \"../firebase\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { collection, query, where, getDocs } from \"firebase/firestore\";\r\n\r\nconst RecipeFragment = ({ recipes }) => {\r\n  const [openRecipe, setOpenRecipe] = useState(false);\r\n  const [imagePath, setImagePath] = useState(null);\r\n  const [recipe, setRecipe] = useState(null);\r\n  let { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    for (const value of Object.values(recipes)) {\r\n      if (value.title === id) setRecipe(value);\r\n    }\r\n    if (recipe === null) {\r\n      queryRecipe();\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    processRecipe();\r\n  }, [recipe]);\r\n\r\n  async function queryRecipe() {\r\n    const q = query(collection(db, \"recipes\"), where(\"title\", \"==\", id));\r\n    const querySnapshot = await getDocs(q);\r\n    querySnapshot.forEach((doc) => {\r\n      setRecipe(doc.data());\r\n      console.log(doc.data());\r\n    });\r\n  }\r\n\r\n  const processRecipe = () => {\r\n    if (recipe === null) return;\r\n    if (recipe.downloadedImage) {\r\n      setImagePath(recipe.downloadedImage);\r\n    } else if (recipe.imageUploaded) {\r\n      getDownloadURL(ref(storage, recipe.imagePath)).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    } else {\r\n      getDownloadURL(ref(storage, \"defaultFoodImage.png\")).then((url) => {\r\n        setImagePath(url);\r\n      });\r\n    }\r\n    recipe.ingredients = recipe.ingredients ? recipe.ingredients : [];\r\n    recipe.amounts = recipe.amounts ? recipe.amounts : [];\r\n    recipe.steps = recipe.steps ? recipe.steps : [];\r\n  };\r\n\r\n  return recipe == null ? (\r\n    <NoRecipeFound recipes={recipes} keyword={id} />\r\n  ) : (\r\n    <Grid container direction=\"column\" alignItems=\"center\" paddingTop=\"10px\">\r\n      <Grid\r\n        container\r\n        width=\"100vw\"\r\n        maxWidth=\"1000px\"\r\n        bgcolor=\"white\"\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n      >\r\n        <div className=\"textBox\">\r\n          <Stack direction=\"column\"></Stack>\r\n\r\n          {/* Start: Recipe metadata */}\r\n          <Grid container width=\"100%\" direction=\"row\">\r\n            <Grid\r\n              container\r\n              width=\"50%\"\r\n              direction=\"column\"\r\n              justifyContent=\"center\"\r\n            >\r\n              <Grid item zeroMinWidth>\r\n                <Typography variant=\"h3\" align=\"center\">\r\n                  {recipe.title}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item zeroMinWidth>\r\n                <Typography variant=\"body1\" align=\"center\">\r\n                  {recipe.description}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              container\r\n              width=\"50%\"\r\n              direction=\"column\"\r\n              justifyContent=\"center\"\r\n            >\r\n              {imagePath !== null ? (\r\n                <img\r\n                  width=\"100%\"\r\n                  src={imagePath}\r\n                  style={{ objectFit: \"cover\" }}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {/* End: Recipe metadata */}\r\n\r\n          {/* Start: Ingredients section */}\r\n          <Typography variant=\"h5\">Ingredients</Typography>\r\n          {recipe.ingredients.map((ingredient, index) => (\r\n            <div key={index}>\r\n              <Grid container direction=\"row\" justifyContent=\"flex-start\">\r\n                <Grid item xs>\r\n                  <Typography variant=\"body1\">\r\n                    {recipe.ingredients[index]}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs>\r\n                  <Typography variant=\"body1\">\r\n                    {recipe.amounts[index]}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ))}\r\n          {/* End: Ingredients section */}\r\n\r\n          {openRecipe ? (\r\n            recipe.steps.length !== 0 ? (\r\n              recipe.steps.map((step, index) => (\r\n                <div key={index} style={{ marginTop: \"10px\" }}>\r\n                  <Typography variant=\"h5\">{\"Step \" + (index + 1)}</Typography>\r\n                  <Typography variant=\"body1\">{step}</Typography>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <Typography variant=\"body1\">Recipe not available.</Typography>\r\n            )\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n        <Button\r\n          variant=\"text\"\r\n          fullWidth\r\n          onClick={(event) => setOpenRecipe(!openRecipe)}\r\n        >\r\n          {openRecipe ? \"Hide Recipe\" : \"See Recipe\"}\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\nexport default RecipeFragment;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport TopAppBar from \"./components/TopAppBar\";\r\nimport FloatingActionButton from \"./components/FloatingActionButton\";\r\nimport AddFragment from \"./components/AddFragment\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport myTheme from \"./myTheme\";\r\nimport EditingDraft from \"./components/EditingDraft\";\r\nimport db, { storage } from \"./firebase\";\r\nimport {\r\n  getDocs,\r\n  collection,\r\n  setDoc,\r\n  doc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport MainFragment from \"./components/MainFragment\";\r\nimport RecipeFragment from \"./components/RecipeFragment\";\r\nimport { generateImageId } from \"./Backend\";\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  React.useEffect(() => {\r\n    getDraftsFromDatabase();\r\n    getRecipesFromDatabase();\r\n  }, []);\r\n\r\n  async function getDraftsFromDatabase() {\r\n    const snapshot = await getDocs(collection(db, \"drafts\"));\r\n    const drafts = snapshot.docs.map((doc) => {\r\n      const data = doc.data();\r\n      data.id = doc.id;\r\n      return data;\r\n    });\r\n    drafts.forEach((draft) => {\r\n      if (draft.imageUploaded) {\r\n        getDownloadURL(ref(storage, draft.imagePath)).then((url) => {\r\n          draft.downloadedImage = url;\r\n        });\r\n      } else {\r\n        getDownloadURL(ref(storage, \"defaultFoodImage.png\")).then((url) => {\r\n          draft.downloadedImage = url;\r\n        });\r\n      }\r\n    });\r\n    setDrafts(drafts);\r\n  }\r\n\r\n  async function uploadDraftToDatabase(draft) {\r\n    await setDoc(doc(db, \"drafts\", draft.id), draft);\r\n  }\r\n\r\n  async function getRecipesFromDatabase() {\r\n    const snapshot = await getDocs(collection(db, \"recipes\"));\r\n    const recipes = snapshot.docs.map((doc) => doc.data());\r\n    recipes.forEach((recipe) => {\r\n      if (recipe.imageUploaded) {\r\n        getDownloadURL(ref(storage, recipe.imagePath)).then((url) => {\r\n          recipe.downloadedImage = url;\r\n        });\r\n      } else {\r\n        getDownloadURL(ref(storage, \"defaultFoodImage.png\")).then((url) => {\r\n          recipe.downloadedImage = url;\r\n        });\r\n      }\r\n    });\r\n    console.log(recipes);\r\n    setRecipes(recipes);\r\n  }\r\n\r\n  async function deleteDraftFromDatabase(draft) {\r\n    await deleteDoc(doc(db, \"drafts\", draft.id));\r\n  }\r\n\r\n  async function uploadRecipeToDatabase(draft) {\r\n    let updates = {};\r\n    Object.keys(draft).forEach((key) => {\r\n      if (key !== \"downloadedImage\") updates[key] = draft[key];\r\n    });\r\n    await setDoc(doc(db, \"recipes\", draft.id), updates);\r\n  }\r\n\r\n  const [currentEditingDraft, setCurrentEditingDraft] = useState();\r\n  const [drafts, setDrafts] = useState([]);\r\n  const [recipes, setRecipes] = useState([\r\n    { title: \"Manual\", description: \"Manual\" },\r\n  ]);\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  const onCreate = (id) => {\r\n    setDrafts([...drafts, { id: id, title: \"\", description: \"\" }]);\r\n  };\r\n\r\n  const saveDraft = (newDraft) => {\r\n    if (newDraft.image !== null && !newDraft.imageUploaded) {\r\n      const imageId = generateImageId();\r\n      const storageRef = ref(storage, imageId);\r\n      const imageFile = newDraft.image;\r\n      uploadBytes(storageRef, imageFile);\r\n      newDraft.imagePath = storageRef.fullPath;\r\n      newDraft.imageUploaded = true;\r\n      newDraft.image = \"\";\r\n    } else {\r\n      newDraft.image = \"\";\r\n    }\r\n\r\n    setDrafts(\r\n      drafts.map((oldDraft) =>\r\n        oldDraft.id === newDraft.id ? newDraft : oldDraft\r\n      )\r\n    );\r\n    if (!drafts.find((oldDraft) => oldDraft.id === newDraft.id)) {\r\n      setDrafts([...drafts, newDraft]);\r\n    }\r\n    console.log(newDraft);\r\n    uploadDraftToDatabase(newDraft);\r\n  };\r\n\r\n  const deleteDraft = (newDraft) => {\r\n    setDrafts(drafts.filter((draft) => draft.id !== newDraft.id));\r\n    deleteDraftFromDatabase(newDraft);\r\n  };\r\n\r\n  const uploadDraft = (newDraft) => {\r\n    setDrafts(drafts.filter((draft) => draft.id !== newDraft.id));\r\n    setRecipes([...recipes, newDraft]);\r\n    deleteDraftFromDatabase(newDraft);\r\n    uploadRecipeToDatabase(newDraft);\r\n  };\r\n\r\n  const searchRecipe = (newKeyword) => {\r\n    setKeyword(newKeyword);\r\n    console.log(\"searched word is \" + newKeyword);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={myTheme}>\r\n      <Router>\r\n        <TopAppBar searchRecipe={searchRecipe} />\r\n        <Routes>\r\n          <Route\r\n            path=\"/editingDraft\"\r\n            element={\r\n              <EditingDraft\r\n                draft={currentEditingDraft}\r\n                onSaveDraft={saveDraft}\r\n                uploadDraft={uploadDraft}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/addDraft\"\r\n            element={\r\n              <AddFragment\r\n                drafts={drafts}\r\n                onCreate={onCreate}\r\n                onDelete={deleteDraft}\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <div>\r\n                <MainFragment recipes={recipes} keyword={keyword} />\r\n                <Link to=\"addDraft\">\r\n                  <FloatingActionButton />\r\n                </Link>\r\n              </div>\r\n            }\r\n          />\r\n          <Route\r\n            path=\"/recipe/:id\"\r\n            element={<RecipeFragment recipes={recipes} />}\r\n          />\r\n          <Route\r\n            path=\"/draft/:id\"\r\n            element={\r\n              <EditingDraft\r\n                drafts={drafts}\r\n                onSaveDraft={saveDraft}\r\n                uploadDraft={uploadDraft}\r\n              />\r\n            }\r\n          />\r\n        </Routes>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\"\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}